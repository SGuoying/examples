# Use this YAML to verify that fine-tuning on the SuperGLUE task mixture works. Runs on CPU or GPUs (if available).
# From `examples/ul2`, run:
#   `composer main.py yamls/test/xsum-prefixlm.yaml` to run using the HuggingFace T5

tokenizer_name: gpt2
max_seq_len: 128
decoder_only_format: true

# Run Name
run_name: test

# Model
model:
  name: hf_prefix_lm
  use_pretrained: true # Train the model from scratch. Set to true to start from the HF off-the-shelf weights.
  pretrained_model_name: ${tokenizer_name}
  tokenizer_name: ${tokenizer_name}
  z_loss: 0.0001
  generation_eval: true

# Dataloaders
train_loader:
  name: xsum
  dataset:
    split: validation
    tokenizer_name: ${tokenizer_name}
    max_seq_length: ${max_seq_len}
    decoder_only_format: ${decoder_only_format}
  shuffle: true
  drop_last: true
  num_workers: 0
  pin_memory: true
  prefetch_factor: 2
  persistent_workers: false
  timeout: 0

eval_loader:
  name: xsum
  dataset:
    split: validation
    tokenizer_name: ${tokenizer_name}
    max_seq_length: ${max_seq_len}
    decoder_only_format: ${decoder_only_format}
  shuffle: true
  drop_last: true
  num_workers: 0
  pin_memory: true
  prefetch_factor: 2
  persistent_workers: false
  timeout: 0

global_train_batch_size: 4

# Optimization
scheduler:
  name: constant_with_warmup # UL2 paper calls for constant LR when fine-tuning
  t_warmup: 10ba

optimizer:
  name: adafactor # UL2 paper calls for Adafactor w/ unknown HPs
  lr: 0.0001 # Actual LR determined by scheduler
  weight_decay: 0.0 # Amount of weight decay regularization
  scale_parameter: false

# Training duration and evaluation frequency
max_duration: 10ba
eval_interval: 10ba
eval_subset_num_batches: 5 # For code testing, evaluate on a subset of 20 batches

# System
seed: 17
device_eval_batch_size: 4
device_train_microbatch_size: 4
precision: fp32

# Logging
progress_bar: false
log_to_console: true

callbacks:
  lr_monitor: {}
